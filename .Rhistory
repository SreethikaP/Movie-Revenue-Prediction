shiny::runApp("app")
shiny::runApp("app.R")
shiny::runApp('/app', host='0.0.0.0', port=3838, launch.browser=FALSE)
shiny::runApp('/app/app.R', host='0.0.0.0', port=3838, launch.browser=FALSE)
install.packages("rsconnect")
rsconnect::setAccountInfo(name='64pj3f-padala-sreethika', token='57AF2BAEFC23986EC3E14B68652D732F', secret='TK9Txdo5nX1s1wTXR/63Vm7vT4Xd96hiFu2+qPeK')
runApp('app')
shiny::runApp("app.R")
install.packages("rsconnect")
rsconnect::setAccountInfo(name='64pj3f-padala-sreethika', token='57AF2BAEFC23986EC3E14B68652D732F', secret='TK9Txdo5nX1s1wTXR/63Vm7vT4Xd96hiFu2+qPeK')
rsconnect::deployApp('~/Desktop/project/app')
rlang::last_trace()
list.files("~/Desktop/project")
rsconnect::deployApp("~/Desktop/project")
library(shiny)
library(randomForest)
# Load trained model
model <- readRDS("rf_model.rds")
ui <- fluidPage(
titlePanel("Movie Revenue Prediction"),
sidebarLayout(
sidebarPanel(
numericInput("votes", "Enter Votes:", value = 100000),
numericInput("metascore", "Enter Metascore:", value = 70),
numericInput("runtime", "Enter Runtime (in minutes):", value = 120),
numericInput("year", "Enter Year of Release:", value = 2020),
actionButton("predict", "Predict Revenue")
),
mainPanel(
verbatimTextOutput("prediction_output")
)
)
)
server <- function(input, output, session) {
observeEvent(input$predict, {
input_data <- data.frame(
Votes = input$votes,
Metascore = input$metascore,
Runtime = input$runtime,
Year = input$year
)
predicted <- predict(model, input_data)
output$prediction_output <- renderText({
paste("Predicted Revenue: $", round(predicted, 2), " Million")
})
})
}
shinyApp(ui, server)
rsconnect::deployApp()
rsconnect::deployApp()
rsconnect::deployApp()
rsconnect::deployApp()
rsconnect::deployApp()
rsconnect::deployApp()
rsconnect::deployApp()
rsconnect::deployApp()
